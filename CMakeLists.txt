#Base
cmake_minimum_required(VERSION 3.16)
project(TP_2023_Project)
set(CMAKE_CXX_STANDARD 20)
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/exe)
if (WIN32)
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
endif(WIN32)
if (UNIX)
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/linux_lib)
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/linux_lib)
endif (UNIX)
add_executable(${PROJECT_NAME} main.cpp Global_Definitions.h Resources/icons/i.rc tests/testing_game1.cpp)
add_definitions(-DPATH_TO_PROJECT_FILES="${CMAKE_CURRENT_SOURCE_DIR}")
add_definitions(-DPATH_TO_RESOURCES="${CMAKE_CURRENT_SOURCE_DIR}/Resources")
##########################################################################

if (WIN32)
  set(SFML ./SFML-2.5.1)
  set(SFML_DIR ${SFML}/lib/cmake/SFML)
  set(CMAKE_EXE_LINKER_FLAGS "-static -static-libgcc")
  set(SFML_STATIC_LIBRARIES TRUE)
endif(WIN32)
if (UNIX)
  set(SFML ./SFML-2.5.1_for_linux)
  set(SFML_DIR ${SFML}/lib/cmake/SFML)
endif (UNIX)
target_link_libraries(${PROJECT_NAME} sfml-graphics sfml-window sfml-system)
find_package(SFML REQUIRED graphics network audio window system)
##########################################################################

set(DEBUG 0)

add_subdirectory(tests)